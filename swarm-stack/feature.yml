version: '3.7'
services:
  cmpauthorization:
    image: docker.pkg.github.com/skuzzle/cmp/authorization-server:${VERSION:?VERSION property not defined or empty}
    secrets:
    - cmp_google_client_secret
    - cmp_google_client_id
    - cmp_redis_pw
    environment:
    # database
    - 'spring.data.mongodb.database=cmp'
    - 'spring.data.mongodb.host=cmpmongo'
    # redis session management
    - 'server.servlet.session.timeout=3600'
    - 'spring.session.store-type=redis'
    - 'spring.session.redis.flush-mode=on-save'
    - 'spring.session.redis.namespace=spring:session:auth'
    - 'spring.redis.host=cmpredis'
    - 'spring.redis.password=$${fileContents;/run/secrets/cmp_redis_pw}'
    # logging
    - 'logging.level.org.springframework.security=DEBUG'
    - 'logging.level.de.skuzzle.cmp.common.http=TRACE'
    # Spring oauth
    - 'spring.security.oauth2.client.registration.google.client-id=$${fileContents;/run/secrets/cmp_google_client_id}'
    - 'spring.security.oauth2.client.registration.google.client-secret=$${fileContents;/run/secrets/cmp_google_client_secret}'
    healthcheck:
      test: ["CMD", "curl" , "-f", "http://localhost:9000/actuator/health"]
      interval: 20s
      timeout: 10s
      retries: 5
    logging:
      options:
        loki-pipeline-stage-file: '/loki-pipeline.yml'
    networks:
    - cmp
    - traefik_proxy
    deploy:
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.${VERSION}acc.tls=true"
        - "traefik.http.routers.${VERSION}acc.tls.certresolver=le"
        - "traefik.http.routers.${VERSION}acc.rule=Host(`${VERSION:?VERSION not set or empty}accounts.countmy.pizza`)"
        - "traefik.http.routers.${VERSION}acc.entrypoints=https"
        - "traefik.http.services.${VERSION}acc.loadbalancer.server.port=8080"
      replicas: 1
      update_config:
        parallelism: 1
        order: start-first
        failure_action: rollback
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 128M
          
  cmpbackend:
    image: docker.pkg.github.com/skuzzle/cmp/backend-server:${VERSION:?VERSION property not defined or empty}
    environment:
    # data base
    - 'spring.data.mongodb.database=cmp'
    - 'spring.data.mongodb.host=cmpmongo'
    # general api rate limit
    - 'cmp.api.ratelimit.rps=1000'
    # oauth
    - 'spring.security.oauth2.resourceserver.jwt.jwk-set-uri=https://${VERSION}acc.countmy.pizza/.well-known/jwks.json'
    # Logging
#    - 'logging.level.de.skuzzle.cmp.common.http=DEBUG'
    healthcheck:
      test: ["CMD", "curl" , "-f", "http://localhost:9000/actuator/health"]
      interval: 20s
      timeout: 10s
      retries: 5
    logging:
      options:
        loki-pipeline-stage-file: '/loki-pipeline.yml'
    networks:
    - cmp
    deploy:
      replicas: 1
      update_config:
        parallelism: 1
        order: start-first
        failure_action: rollback
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 128M

  cmpfrontend:
    image: docker.pkg.github.com/skuzzle/cmp/frontend-server:${VERSION:?VERSION property not defined or empty}
    secrets:
    - cmp_redis_pw
    environment:
    # oauth
    - 'spring.security.oauth2.client.registration.cmp.client-secret=abc'
    - 'spring.security.oauth2.client.registration.cmp.redirectUri=https://${VERSION}.countmy.pizza/login/oauth2/code/cmp'
    - 'spring.security.oauth2.client.provider.cmp.tokenUri=https://${VERSION}acc.countmy.pizza/oauth/token'
    - 'spring.security.oauth2.client.provider.cmp.authorizationUri=https://${VERSION}acc.countmy.pizza/oauth/authorize'
    - 'spring.security.oauth2.client.provider.cmp.userInfoUri=https://${VERSION}acc.countmy.pizza/oauth/check_token'
    - 'spring.security.oauth2.client.provider.cmp.jwkSetUri=https://${VERSION}acc.countmy.pizza/.well-known/jwks.json'
    # backend
    - 'cmp.backend.url=http://cmpbackend:8080'
    - 'cmp.backend.healthUrl=http://cmpbackend:9000'
    # ui
    - 'cmp.ui.testSystemWarning=true'
    # redis session management
    - 'server.servlet.session.timeout=3600'
    - 'spring.session.store-type=redis'
    - 'spring.session.redis.flush-mode=on-save'
    - 'spring.session.redis.namespace=spring:session:frontend'
    - 'spring.redis.host=cmpredis'
    - 'spring.redis.password=$${fileContents;/run/secrets/cmp_redis_pw}'
    deploy:
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.${VERSION}.tls=true"
        - "traefik.http.routers.${VERSION}.tls.certresolver=le"
        - "traefik.http.routers.${VERSION}.rule=Host(`${VERSION:?VERSION not set or empty}.countmy.pizza`)"
        - "traefik.http.routers.${VERSION}.entrypoints=https"
        - "traefik.http.services.${VERSION}.loadbalancer.server.port=8080"
      replicas: 1
      update_config:
        parallelism: 1
        order: start-first
        failure_action: rollback
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 128M
    healthcheck:
      test: ["CMD", "curl" , "-f", "http://localhost:9000/actuator/health"]
      interval: 20s
      timeout: 10s
      retries: 5
    logging:
      options:
        loki-pipeline-stage-file: '/loki-pipeline.yml'
    networks:
    - cmp
    - traefik_proxy

  cmpredis:
    image: redis
    secrets:
    - cmp_redis_pw
    environment:
    - 'REDIS_PASS_FILE=/run/secrets/cmp_redis_pw'
    command: [
      "bash", "-c",
      '
      docker-entrypoint.sh
      --requirepass "$$(cat $$REDIS_PASS_FILE)"
      '
    ]
    networks:
    - cmp
    deploy:
      resources:
        limits:
          memory: 128m
        reservations:
          memory: 64m

  cmpmongo:
    image: mongo
    volumes:
    - 'data:/data/db'
    networks:
    - cmp

volumes:
  data:

secrets:
  cmp_google_client_id:
    external: true
  cmp_google_client_secret:
    external: true
  cmp_redis_pw:
    external: true
  
networks:
  cmp:
  traefik_proxy:
    external: true
    name: traefik_proxy
