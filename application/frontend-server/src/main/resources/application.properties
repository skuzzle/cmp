management.server.port=9000
cmp.version=@application.version.number@
cmp.backend.url=http://localhost:8080
cmp.backend.healthUrl=http://localhost:9000
cmp.backend.useResilienceFeatures=true

server.forward-headers-strategy=NATIVE
management.endpoints.web.exposure.include=health,prometheus

# redis session management
server.servlet.session.timeout=15m
spring.session.store-type=redis
spring.session.redis.flush-mode=on-save
spring.session.redis.namespace=spring:session

# static resource serving + cache busting
spring.web.resources.cache.cachecontrol.max-age=31536000
spring.resources.chain.html-application-cache=true
spring.web.resources.chain.enabled=true
spring.web.resources.chain.strategy.content.enabled=true 
spring.web.resources.chain.strategy.content.paths=/**

# Enable response compression
server.compression.enabled=true
server.compression.mime-types=text/html,text/xml,text/plain
server.compression.min-response-size=1024

# Enable HTTP/2 support, if the current environment supports it
server.http2.enabled=true

# google oauth
spring.security.oauth2.client.registration.google.client-id=geheim!
spring.security.oauth2.client.registration.google.client-secret=geheim!
spring.security.oauth2.client.registration.google.scope=openid,email,profile

# resilience config
resilience4j.circuitbreaker.instances.backendClient.registerHealthIndicator=true
resilience4j.circuitbreaker.instances.backendClient.slidingWindowSize=100
resilience4j.circuitbreaker.instances.backendClient.permittedNumberOfCallsInHalfOpenState=3

resilience4j.retry.instances.backendClient.maxRetryAttempts=3
resilience4j.retry.instances.backendClient.waitDuration=10s
resilience4j.retry.instances.backendClient.enableExponentialBackoff=true
resilience4j.retry.instances.backendClient.exponentialBackoffMultiplier=2
resilience4j.retry.instances.backendClient.retryExceptions=org.springframework.web.client.HttpServerErrorException,java.io.IOException